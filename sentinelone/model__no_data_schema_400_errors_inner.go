/*
S1 MGMT API

SentinelOne Management Console API specification. Changes made to original schema (saved as sentinelone_original.json) - Converted to yaml and intially removed all paths, definitions, and tags - Added security definition APIToken - Added global security APIToken - Added tags Agents, Agent Actions - Added /agents path and required definitions - Added /agents/actions/disconnect and required definitions - Added /agents/actions/connect and required definitions - Added operation id for all paths (for more readable generation) - Removed minimum value attribute if value is of type string (to prevents validation warnings) - Removed firstFullModeTime parameter in GetAgents (breaks generation due to malformed datetime serverside)

API version: 2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sentinelone

import (
	"encoding/json"
)

// NoDataSchema400ErrorsInner struct for NoDataSchema400ErrorsInner
type NoDataSchema400ErrorsInner struct {
	// Error code
	Code int32 `json:"code"`
	// Error detailed description
	Detail NullableString `json:"detail"`
	// Error general description
	Title string `json:"title"`
	// Extra data that are sent within the error
	Params map[string]interface{} `json:"params,omitempty"`
}

// NewNoDataSchema400ErrorsInner instantiates a new NoDataSchema400ErrorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNoDataSchema400ErrorsInner(code int32, detail NullableString, title string) *NoDataSchema400ErrorsInner {
	this := NoDataSchema400ErrorsInner{}
	this.Code = code
	this.Detail = detail
	this.Title = title
	return &this
}

// NewNoDataSchema400ErrorsInnerWithDefaults instantiates a new NoDataSchema400ErrorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNoDataSchema400ErrorsInnerWithDefaults() *NoDataSchema400ErrorsInner {
	this := NoDataSchema400ErrorsInner{}
	return &this
}

// GetCode returns the Code field value
func (o *NoDataSchema400ErrorsInner) GetCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *NoDataSchema400ErrorsInner) GetCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *NoDataSchema400ErrorsInner) SetCode(v int32) {
	o.Code = v
}

// GetDetail returns the Detail field value
// If the value is explicit nil, the zero value for string will be returned
func (o *NoDataSchema400ErrorsInner) GetDetail() string {
	if o == nil || o.Detail.Get() == nil {
		var ret string
		return ret
	}

	return *o.Detail.Get()
}

// GetDetailOk returns a tuple with the Detail field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NoDataSchema400ErrorsInner) GetDetailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Detail.Get(), o.Detail.IsSet()
}

// SetDetail sets field value
func (o *NoDataSchema400ErrorsInner) SetDetail(v string) {
	o.Detail.Set(&v)
}

// GetTitle returns the Title field value
func (o *NoDataSchema400ErrorsInner) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *NoDataSchema400ErrorsInner) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *NoDataSchema400ErrorsInner) SetTitle(v string) {
	o.Title = v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *NoDataSchema400ErrorsInner) GetParams() map[string]interface{} {
	if o == nil || o.Params == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoDataSchema400ErrorsInner) GetParamsOk() (map[string]interface{}, bool) {
	if o == nil || o.Params == nil {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *NoDataSchema400ErrorsInner) HasParams() bool {
	if o != nil && o.Params != nil {
		return true
	}

	return false
}

// SetParams gets a reference to the given map[string]interface{} and assigns it to the Params field.
func (o *NoDataSchema400ErrorsInner) SetParams(v map[string]interface{}) {
	o.Params = v
}

func (o NoDataSchema400ErrorsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["detail"] = o.Detail.Get()
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if o.Params != nil {
		toSerialize["params"] = o.Params
	}
	return json.Marshal(toSerialize)
}

type NullableNoDataSchema400ErrorsInner struct {
	value *NoDataSchema400ErrorsInner
	isSet bool
}

func (v NullableNoDataSchema400ErrorsInner) Get() *NoDataSchema400ErrorsInner {
	return v.value
}

func (v *NullableNoDataSchema400ErrorsInner) Set(val *NoDataSchema400ErrorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableNoDataSchema400ErrorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableNoDataSchema400ErrorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNoDataSchema400ErrorsInner(val *NoDataSchema400ErrorsInner) *NullableNoDataSchema400ErrorsInner {
	return &NullableNoDataSchema400ErrorsInner{value: val, isSet: true}
}

func (v NullableNoDataSchema400ErrorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNoDataSchema400ErrorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


